checkAllSame = lambda a: len([e for i, e in enumerate(a) if i == 0 or e == a[i-1]]) == len(a)
getWinner = lambda a: a[0] if checkAllSame(a) else 0
hasZero = lambda board: len([row for row in board if 0 in row]) > 0

def is_solved(board):
    
    score = {0:0,1:0,2:0}
    
    for i in range(len(board)):
        
        row = board[i]
        col = [a[i] for a in board]
        score[getWinner(row)] += 1
        score[getWinner(col)] += 1
        
    d1 = [board[0][0], board[1][1], board[2][2]]
    d2 = [board[0][2], board[1][1], board[2][0]]
    score[getWinner(d1)] += 1
    score[getWinner(d2)] += 1
    
    if score[0] == 8 and hasZero(board):
        return -1
    elif score[1] == score[2]:
        return 0
    elif score[1] > score[2]:
        return 1
    else:
        return 2
